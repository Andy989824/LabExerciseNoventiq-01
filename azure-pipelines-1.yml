trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleApp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool: 'my-laptop-agent'
    steps:
    - task: Docker@2
      inputs:
       containerRegistry: 'myappacr1998001'
       repository: '$(imageRepo)'
       command: 'buildAndPush'
       Dockerfile: '$(Build.SourcesDirectory)/s/docker-compose.yaml'
       tags: |
         $(tag)
         latest
    - task: PublishPipelineArtifact@1
      inputs:
          targetPath: '$(Pipeline.Workspace)/s/aksManifestFile'
          artifact: 'manifests'
          publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to Dev
  variables:
    acr-secret: aks-example-auth
  dependsOn: Build
  jobs:
    - job: Deploy 
      displayName: Deploy to AKS
      pool: 'my-laptop-agent'
      steps: 
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'manifests'
            targetPath: '$(Pipeline.Workspace)/manifests'
        - task: KubernetesManifest@1
          inputs:
            action: 'createSecret'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'AKS-service-connection'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: '$(acr-secret)'
            dockerRegistryEndpoint: 'myappacr1998001'
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'AKS-service-connection'
            namespace: 'default'
            manifests: 
              $(Pipeline.Workspace)/manifests/aksManifestFile.yaml