trigger:
  - main

resources:
  - repo: self

variables:
  - group: my-variable-group-01

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool: "my-laptop-agent"
        steps:
          - script: echo 'This is new pipeline with helm'

          - task: replacetokens@5
            displayName: Replace Tokens (app.js)
            inputs:
                    rootDirectory: "$(Build.SourcesDirectory)/src"
                    targetFiles: "server.js"
                    encoding: "auto"
                    tokenPattern: "custom"
                    tokenPrefix: "#{"
                    tokenSuffix: "}#"
                    writeBOM: true
                    actionOnMissing: "warn"
                    keepToken: false
                    actionOnNoFiles: "warn"
                    enableTransforms: false
                    enableRecursion: false
                    useLegacyPattern: false
                    enableTelemetry: true

          - task: replacetokens@5
            displayName: Replace Tokens (env)
            inputs:
                    rootDirectory: "$(Build.SourcesDirectory)/"
                    targetFiles: ".env"
                    encoding: "auto"
                    tokenPattern: "custom"
                    tokenPrefix: "#{"
                    tokenSuffix: "}#"
                    writeBOM: true
                    actionOnMissing: "warn"
                    keepToken: false
                    actionOnNoFiles: "warn"
                    enableTransforms: false
                    enableRecursion: false
                    useLegacyPattern: false
                    enableTelemetry: true
          - task: replacetokens@5
            displayName: Replace Token (Replica, Image)
            inputs:
                    rootDirectory: '$(Build.SourcesDirectory)/helm/templates'
                    targetFiles: 'aksManifestFile.yaml'
                    encoding: 'auto'
                    tokenPattern: 'custom'
                    tokenPrefix: '#'
                    tokenSuffix: '#'
                    writeBOM: true
                    actionOnMissing: 'fail'
                    keepToken: false
                    actionOnNoFiles: 'fail'
                    enableTransforms: false
                    enableRecursion: false
                    useLegacyPattern: false
                    enableTelemetry: true
          - task: Docker@2
            inputs:
              containerRegistry: "myappacr1998001"
              repository: $(imageRepo-2)
              command: "buildAndPush"
              Dockerfile: "$(Build.SourcesDirectory)/Dockerfile.app"
              tags: $(appTag-2)
          - task: Docker@2
            inputs:
              containerRegistry: "myappacr1998001"
              repository: $(imageRepo-2)
              command: "buildAndPush"
              Dockerfile: "$(Build.SourcesDirectory)/Dockerfile.server"
              tags: $(serverTag-2)

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Pipeline.Workspace)/s"
              artifact: "manifests"
              publishLocation: "pipeline"

  - stage: Deploy
    displayName: Deploy to Dev
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy to AKS
        environment: "Andy989824NoventiqExerciseRepo-01.default"
        pool: "my-laptop-agent"
        strategy:

          runOnce:
            deploy:
              steps:
                - task: HelmInstaller@0
                  inputs:
                    helmVersion: '2.14.1'
                    installKubectl: true
                - task: HelmDeploy@0
                  inputs:
                    command: 'package'
                    chartPath: 'LabExerciseNoventiq-01'
                    chartVersion: 'hv:1'
                - task: PublishPipelineArtifact@1
                  inputs:
                        targetPath: '$(Build.ArtifactStagingDirectory)'
                        artifact: 'sample-helm-artifact'
                        publishLocation: 'pipeline'
                              
               